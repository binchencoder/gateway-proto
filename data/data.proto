syntax = "proto3";
option go_package = "data";

option java_package = "com.binchencoder.grpc.data";
option java_outer_classname = "DataProtos";

package data;

// The unique service ID. Please sort in alphanumeric order.
//
// Services or apps under the same product should be placed in one section
// with the same naming prefix. For example, vexillary itself has 4 services
// so their service IDs could be defined as:
//
//   <blank line>
//   //### 2700-2709 Approval services.
//   <blank line>
//   APPROVAL_GRPC_SERVICE   = 2700;
//   APPROVAL_SCHEDULE_SERVICE = 27001;
//   <blank line>
//
enum ServiceId {
    SERVICE_NONE = 0;

    //### 11 - 99: Infrastructure services
    VEXILLARY_SERVICE       = 11;
    EASE_GATEWAY           = 12;
    CUSTOM_GATEWAY         = 13;

    //### 2700-2709 Approval services.
    APPROVAL_GRPC_SERVICE = 2700;
    APPROVAL_SCHEDULE_SERVICE = 2701;

    //### Test services begins from 2147470000.
    SHARED_TEST_CLIENT_SERVICE  = 2147470000; // public test client service.
    SHARED_TEST_SERVER_SERVICE  = 2147470001; // public test server service.

    CUSTOM_EASE_GATEWAY_TEST = 2147470006; // public custom ease-gateway service.

    ///### for config server default settings.
    _ = 2147483647; // math.MaxInt32
}

// AppType 定义应用类型.
enum AppType {
    ALL                 = 0; // All app types.

    APPROVAL            = 1; // 审批应用.
}

// Locale represents a specific geographical, political, or cultural region.
enum Locale {
    LOCALE_NONE = 0;
    // ENGLISH
    EN = 1;
    // FRENCH
    FR = 2;
    // GERMAN
    DE = 3;
    // ITALIAN
    IT = 4;
    // JAPANESE
    JA = 5;
    // KOREAN
    CO = 6;
    // CHINESE
    ZH = 7;
    // SIMPLIFIED_CHINESE
    ZH_CN = 101;
    // TRADITIONAL_CHINESE
    ZH_TW = 102;
    // FRANCE
    FR_FR = 103;
    // GERMANY
    DE_DE = 104;
    // ITALY
    IT_IT = 105;
    // JAPAN
    JA_JP = 106;
    // KOREA
    KO_KR = 107;
    // UK
    EN_GB = 108;
    // US
    EN_US = 109;
    // CANADA
    EN_CA = 110;
    // CANADA_FRENCH
    FR_CA = 111;
}

// UserDetails provides core user information.
message UserDetails {
    // User's identity.
    string account_id = 1;
    // uid.
	string user_id = 2;
	// cid.
	string company_id = 3;
    // User's Locale.
    Locale locale = 4;
}