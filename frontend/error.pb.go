// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: frontend/error.proto

///### Package frontend defines common messages for frontend errors (including
///### WEB, Android, iOS, Windows, and MacOS Apps).

package error

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

///### Enum for all error codes.
///### Localization Guide for error codes. Error code which requires Localization
///### need to provide a //@Trans chinese comment on the above line.
type ErrorCode int32

const (
	ErrorCode_NONE ErrorCode = 0
	///### 100000 - 120000 Common error
	//@Trans 当前服务正在维护，请稍后再试.
	ErrorCode_SERVICE_DOWN ErrorCode = 100000
	//@Trans 当前服务内部错误，请稍后再试.
	ErrorCode_SERVICE_INTERNAL_ERROR ErrorCode = 100001
	//@Trans 找不到意中的“它”，请稍后重试!
	ErrorCode_SERVICE_INTERNAL_ACCIDENTAL_ERROR ErrorCode = 100002
	//@Trans 程序参数错误.
	ErrorCode_SERVICE_BAD_PARAM_ERROR ErrorCode = 100003
	//@Trans 程序编码错误.
	ErrorCode_SERVICE_UNREACHABLE_CODE ErrorCode = 100004
	//@Trans Undefined error.
	ErrorCode_UNDEFINED ErrorCode = 100005
	//@Trans 参数不合法
	ErrorCode_BADPARAM_ERROR ErrorCode = 100006
	//@Trans 无法找到
	ErrorCode_RESOURCE_NOT_FOUND ErrorCode = 100007
	//@Trans 无效请求
	ErrorCode_BAD_REQUEST ErrorCode = 100008
	///### 500500-500999: Common error codes.
	//@Trans 用户认证失败，需重新登录
	ErrorCode_AUTHEN_ERROR ErrorCode = 500500
	//@Trans 服务器端错误
	ErrorCode_SERVER_ERROR ErrorCode = 500501
	//@Trans 权限不足
	ErrorCode_NORIGHT_ERROR ErrorCode = 500502
	//@Trans 数据不存在或已删除
	ErrorCode_NODATA_ERROR ErrorCode = 500503
	//@Trans 用户不存在或已停用
	ErrorCode_USER_ERROR ErrorCode = 500504
	//@Trans 无效验签
	ErrorCode_INVALID_SIGNATURE ErrorCode = 500505
	//@Trans 主线分类名称重复！
	ErrorCode_IGOAL_DUPLICATE_TAG ErrorCode = 620001
	//@Trans 您无权限进行此操作！
	ErrorCode_IGOAL_NO_ONLINE_TMPL_MANAGE_PERMISSION ErrorCode = 620002
	//@Trans 模板文件大小超限！
	ErrorCode_IGOAL_IMPORT_TEMPLATE_FILE_SIZE_EXCEEDED ErrorCode = 620003
	//@Trans 系统开小差了，请稍后尝试！
	ErrorCode_IGOAL_VERSION_CONFLICT_ERROR ErrorCode = 620004
	//@Trans 上传文件数量超过上限!
	ErrorCode_IGOAL_DOC_UPLOAD_FILE_NUMBER_EXCEEDED ErrorCode = 620005
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:      "NONE",
		100000: "SERVICE_DOWN",
		100001: "SERVICE_INTERNAL_ERROR",
		100002: "SERVICE_INTERNAL_ACCIDENTAL_ERROR",
		100003: "SERVICE_BAD_PARAM_ERROR",
		100004: "SERVICE_UNREACHABLE_CODE",
		100005: "UNDEFINED",
		100006: "BADPARAM_ERROR",
		100007: "RESOURCE_NOT_FOUND",
		100008: "BAD_REQUEST",
		500500: "AUTHEN_ERROR",
		500501: "SERVER_ERROR",
		500502: "NORIGHT_ERROR",
		500503: "NODATA_ERROR",
		500504: "USER_ERROR",
		500505: "INVALID_SIGNATURE",
		620001: "IGOAL_DUPLICATE_TAG",
		620002: "IGOAL_NO_ONLINE_TMPL_MANAGE_PERMISSION",
		620003: "IGOAL_IMPORT_TEMPLATE_FILE_SIZE_EXCEEDED",
		620004: "IGOAL_VERSION_CONFLICT_ERROR",
		620005: "IGOAL_DOC_UPLOAD_FILE_NUMBER_EXCEEDED",
	}
	ErrorCode_value = map[string]int32{
		"NONE":                                     0,
		"SERVICE_DOWN":                             100000,
		"SERVICE_INTERNAL_ERROR":                   100001,
		"SERVICE_INTERNAL_ACCIDENTAL_ERROR":        100002,
		"SERVICE_BAD_PARAM_ERROR":                  100003,
		"SERVICE_UNREACHABLE_CODE":                 100004,
		"UNDEFINED":                                100005,
		"BADPARAM_ERROR":                           100006,
		"RESOURCE_NOT_FOUND":                       100007,
		"BAD_REQUEST":                              100008,
		"AUTHEN_ERROR":                             500500,
		"SERVER_ERROR":                             500501,
		"NORIGHT_ERROR":                            500502,
		"NODATA_ERROR":                             500503,
		"USER_ERROR":                               500504,
		"INVALID_SIGNATURE":                        500505,
		"IGOAL_DUPLICATE_TAG":                      620001,
		"IGOAL_NO_ONLINE_TMPL_MANAGE_PERMISSION":   620002,
		"IGOAL_IMPORT_TEMPLATE_FILE_SIZE_EXCEEDED": 620003,
		"IGOAL_VERSION_CONFLICT_ERROR":             620004,
		"IGOAL_DOC_UPLOAD_FILE_NUMBER_EXCEEDED":    620005,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_frontend_error_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_frontend_error_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_frontend_error_proto_rawDescGZIP(), []int{0}
}

// An error message including its error code and the parameters to render
// a localized string.
type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error code.
	Code ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=frontend.ErrorCode" json:"code,omitempty"`
	// The parameters used to render a localized string.
	Params []string `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_error_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_error_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_frontend_error_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorMessage) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_NONE
}

func (x *ErrorMessage) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

// The error wrapper message. All frontend messages should contain exactly
// one field with this message as the first field. Example:
//
//     message GetMyMemosResponse {
//         frontend.Error error = 1;
//
//         int32  current_page  = 2;
//         int32  page_total    = 3;
//         string continue_token = 4;
//
//         repeated MemoMsg memos = 5;
//     }
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The general error code.
	Code ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=frontend.ErrorCode" json:"code,omitempty"`
	// The general parameters with which to render a localized string.
	Params []string `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	// The debug information. Only populated in DEV, TEST, and QA environment.
	// In PROD environment it will be stripped off before returning to the
	// client.
	Debug string `protobuf:"bytes,3,opt,name=debug,proto3" json:"debug,omitempty"`
	// The detailed error messages.
	Details []*ErrorMessage `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_error_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_error_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_frontend_error_proto_rawDescGZIP(), []int{1}
}

func (x *Error) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_NONE
}

func (x *Error) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Error) GetDebug() string {
	if x != nil {
		return x.Debug
	}
	return ""
}

func (x *Error) GetDetails() []*ErrorMessage {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_frontend_error_proto protoreflect.FileDescriptor

var file_frontend_error_proto_rawDesc = []byte{
	0x0a, 0x14, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x22, 0x4f, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x90, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x2a, 0xc9, 0x04, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0c,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0xa0, 0x8d, 0x06,
	0x12, 0x1c, 0x0a, 0x16, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xa1, 0x8d, 0x06, 0x12, 0x27,
	0x0a, 0x21, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e,
	0x41, 0x4c, 0x5f, 0x41, 0x43, 0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0xa2, 0x8d, 0x06, 0x12, 0x1d, 0x0a, 0x17, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0xa3, 0x8d, 0x06, 0x12, 0x1e, 0x0a, 0x18, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x55, 0x4e, 0x52, 0x45, 0x41, 0x43, 0x48, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x10, 0xa4, 0x8d, 0x06, 0x12, 0x0f, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x45, 0x44, 0x10, 0xa5, 0x8d, 0x06, 0x12, 0x14, 0x0a, 0x0e, 0x42, 0x41, 0x44, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xa6, 0x8d, 0x06, 0x12, 0x18, 0x0a,
	0x12, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0xa7, 0x8d, 0x06, 0x12, 0x11, 0x0a, 0x0b, 0x42, 0x41, 0x44, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xa8, 0x8d, 0x06, 0x12, 0x12, 0x0a, 0x0c, 0x41, 0x55,
	0x54, 0x48, 0x45, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x94, 0xc6, 0x1e, 0x12, 0x12,
	0x0a, 0x0c, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x95,
	0xc6, 0x1e, 0x12, 0x13, 0x0a, 0x0d, 0x4e, 0x4f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x96, 0xc6, 0x1e, 0x12, 0x12, 0x0a, 0x0c, 0x4e, 0x4f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x97, 0xc6, 0x1e, 0x12, 0x10, 0x0a, 0x0a, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x98, 0xc6, 0x1e, 0x12, 0x17, 0x0a,
	0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55,
	0x52, 0x45, 0x10, 0x99, 0xc6, 0x1e, 0x12, 0x19, 0x0a, 0x13, 0x49, 0x47, 0x4f, 0x41, 0x4c, 0x5f,
	0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x47, 0x10, 0xe1, 0xeb,
	0x25, 0x12, 0x2c, 0x0a, 0x26, 0x49, 0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x4e, 0x4f, 0x5f, 0x4f, 0x4e,
	0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54, 0x4d, 0x50, 0x4c, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45,
	0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0xe2, 0xeb, 0x25, 0x12,
	0x2e, 0x0a, 0x28, 0x49, 0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x49,
	0x5a, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0xe3, 0xeb, 0x25, 0x12,
	0x22, 0x0a, 0x1c, 0x49, 0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0xe4, 0xeb, 0x25, 0x12, 0x2b, 0x0a, 0x25, 0x49, 0x47, 0x4f, 0x41, 0x4c, 0x5f, 0x44, 0x4f, 0x43,
	0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4e, 0x55, 0x4d,
	0x42, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0xe5, 0xeb, 0x25,
	0x42, 0x5c, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x42, 0x06, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x3b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_frontend_error_proto_rawDescOnce sync.Once
	file_frontend_error_proto_rawDescData = file_frontend_error_proto_rawDesc
)

func file_frontend_error_proto_rawDescGZIP() []byte {
	file_frontend_error_proto_rawDescOnce.Do(func() {
		file_frontend_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_frontend_error_proto_rawDescData)
	})
	return file_frontend_error_proto_rawDescData
}

var file_frontend_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_frontend_error_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_frontend_error_proto_goTypes = []interface{}{
	(ErrorCode)(0),       // 0: frontend.ErrorCode
	(*ErrorMessage)(nil), // 1: frontend.ErrorMessage
	(*Error)(nil),        // 2: frontend.Error
}
var file_frontend_error_proto_depIdxs = []int32{
	0, // 0: frontend.ErrorMessage.code:type_name -> frontend.ErrorCode
	0, // 1: frontend.Error.code:type_name -> frontend.ErrorCode
	1, // 2: frontend.Error.details:type_name -> frontend.ErrorMessage
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_frontend_error_proto_init() }
func file_frontend_error_proto_init() {
	if File_frontend_error_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_frontend_error_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_error_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frontend_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_frontend_error_proto_goTypes,
		DependencyIndexes: file_frontend_error_proto_depIdxs,
		EnumInfos:         file_frontend_error_proto_enumTypes,
		MessageInfos:      file_frontend_error_proto_msgTypes,
	}.Build()
	File_frontend_error_proto = out.File
	file_frontend_error_proto_rawDesc = nil
	file_frontend_error_proto_goTypes = nil
	file_frontend_error_proto_depIdxs = nil
}
